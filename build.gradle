plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.10-SNAPSHOT" apply false
    id "com.github.breadmoirai.github-release" version "2.4.1"
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-${rootProject.parchment_mappings}")
        }
    }
}

task publishMeEverywhere(){
    dependsOn ':neoforge:publishUnified'
    dependsOn ':fabric:publishUnified'
    dependsOn 'githubRelease'
}

def version = rootProject.mod_version

def forgeDir = new File(project.projectDir, 'neoforge/build/libs/')
def fabricDir = new File(project.projectDir, 'fabric/build/libs/')
def commonDir = new File(project.projectDir, 'common/build/libs/')

def filter = { File file -> file.getName().contains(version) } as FileFilter

// Create directories if they do not exist
forgeDir.mkdirs()
fabricDir.mkdirs()
commonDir.mkdirs()

def forgeFiles = forgeDir.listFiles(filter)
def fabricFiles = fabricDir.listFiles(filter)
def commonFiles = commonDir.listFiles(filter)


githubRelease {
    token project.findProperty("github") ?: System.getenv("github") ?: ""
    owner "VentureCraftMods"
    repo "MC-Gliders"
    tagName "v$rootProject.minecraft_version-${version}"
    targetCommitish "main"
    releaseName "[$rootProject.minecraft_version] Gliders - v$version"
    generateReleaseNotes true
    body new File("${rootProject.projectDir}/changelog.md").text
    draft false
    prerelease false
    releaseAssets(forgeFiles + fabricFiles + commonFiles)
    allowUploadToExisting.set false
    overwrite true
    dryRun false
    apiEndpoint "https://api.github.com"
    client
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name + "-" + rootProject.minecraft_version
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.

        maven {
            url = 'https://maven.cassian.cc'
        }


        // Player Animator
        maven {
            name = "KosmX's maven"
            url = 'https://maven.kosmx.dev/'
        }

        // ThreeTAG
        maven {
            url 'https://repo.repsy.io/mvn/lucraft/threetag'
        }

        // Parchment
        maven {
            url = 'https://maven.parchmentmc.net/'
            content {
                includeGroup 'org.parchmentmc.data'
            }
        }

        maven {
            // saps.dev Maven (KubeJS and Rhino)
            url = 'https://maven.saps.dev/minecraft'
            content {
                includeGroup 'dev.latvian.mods'
            }
        }

        maven {
            url 'https://repo.repsy.io/mvn/lucraft/threetag'
        }

        maven {
            url = 'https://maven.parchmentmc.net/'
            content {
                includeGroup 'org.parchmentmc.data'
            }
        }


        maven {
            url = 'https://www.cursemaven.com'
            content {
                includeGroup 'curse.maven'
            }
        }

        maven {
            url = 'https://maven.terraformersmc.com/releases/'
        }

        maven {
            url = 'https://maven.shedaniel.me'
        }

        maven {
            url = 'https://dvs1.progwml6.com/files/maven/'
        }

        maven {
            name = 'Ladysnake Mods'
            url = 'https://maven.ladysnake.org/releases'
        }

        maven {
            url = 'https://maven.theillusivec4.top/'
        }

        maven {
            name = 'TerraformersMC'
            url = 'https://maven.terraformersmc.com/'
        }

        maven {
            // location of the maven that hosts JEI files
            name = "Progwml6 maven"
            url = "https://dvs1.progwml6.com/files/maven/"
        }
        maven {
            // location of a maven mirror for JEI files, as a fallback
            name = "ModMaven"
            url = "https://modmaven.dev"
        }

        maven {
            url = 'https://jitpack.io'
        }

        maven {
            name = "Fuzs Mod Resources"
            url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
        }

        maven {
            url = "https://maven.theillusivec4.top/"
        }
       // mavenLocal()
        maven { url "https://maven.neoforged.net/releases/" }
        maven {
            url = "https://jm.gserv.me/repository/maven-public/"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 21
    }

    java {
        withSourcesJar()
    }
}
